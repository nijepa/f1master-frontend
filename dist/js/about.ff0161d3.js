(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["about"],{2211:function(a,t,e){},"239a":function(a,t,e){"use strict";e.r(t);var n=e("7a23");function s(a,t,e,s,r,o){var i=Object(n["Q"])("Doc");return Object(n["H"])(),Object(n["f"])(i)}var r=function(a){return Object(n["K"])("data-v-a758e826"),a=a(),Object(n["I"])(),a},o={class:"wrap"},i={class:"page"},l=r((function(){return Object(n["i"])("h2",null,"...for developers",-1)})),p=r((function(){return Object(n["i"])("br",null,null,-1)})),d=r((function(){return Object(n["i"])("br",null,null,-1)})),c=r((function(){return Object(n["i"])("br",null,null,-1)})),u=r((function(){return Object(n["i"])("br",null,null,-1)})),b=r((function(){return Object(n["i"])("h2",null,"F1Master is fantasy Game about Formula 1.",-1)})),v=r((function(){return Object(n["i"])("br",null,null,-1)})),f=r((function(){return Object(n["i"])("br",null,null,-1)})),g=Object(n["l"])(" After registration, users are invited to inform they predictions to race results ( see "),m=Object(n["l"])("Play To Earn"),y=Object(n["l"])(" page)."),x=r((function(){return Object(n["i"])("br",null,null,-1)})),P=Object(n["l"])(" And they predictions should match with the oficial results ("),h=Object(n["l"])("Start Race"),O=Object(n["l"])(" and "),j=Object(n["l"])("Finish Race"),R=Object(n["l"])(") "),T=Object(n["k"])('<br data-v-a758e826><br data-v-a758e826><h2 data-v-a758e826>How do users earn points?</h2><br data-v-a758e826><br data-v-a758e826><p data-v-a758e826> Users score points by answering one of the 5 forms within the &quot;PLAY TO EARN&quot; page. </p><br data-v-a758e826><h4 data-v-a758e826>Form 1: Poletime</h4><br data-v-a758e826><br data-v-a758e826><p data-v-a758e826> Competition about prediction for time about the Pole Position (minutes, seconds and miliseconds).<br data-v-a758e826> Calculate substract the &#39;maximum point&#39; possible (25000) from the &#39;gap&#39;, difference between the oficial result and user prediction.<br data-v-a758e826></p><br data-v-a758e826><span style="color:green;" data-v-a758e826> /*basic function logic:*/<br data-v-a758e826> /*ItÂ´s a sample logic. Developers can change it to another*/<br data-v-a758e826></span><div style="background:rgba(0, 0, 0, 0.9);padding:20px;" data-v-a758e826><span style="color:blue;" data-v-a758e826>function</span> poletimePointsCalculation ( <span style="color:red;" data-v-a758e826>poletimeResult</span>,<span style="color:red;" data-v-a758e826> poletimePrediction</span> ){<br data-v-a758e826><span style="margin-left:60px;" data-v-a758e826></span><span style="color:blue;" data-v-a758e826>const</span> gap = Math.abs(parseInt(poletimeResult) - parseInt(poletimePrediction));<br data-v-a758e826><span style="margin-left:60px;" data-v-a758e826></span><span style="color:green;" data-v-a758e826>//Consider this 2 variable are comming in string format</span>;<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> maxPoint = 25000; <span style="color:green;" data-v-a758e826>//max point is total points possible, define by system rules</span>;<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> userPoints = if(maxPoint - gap &lt; 0 ? 0 : maxPoint - gap);<br data-v-a758e826><br data-v-a758e826><span style="margin-left:80px;color:blue;" data-v-a758e826> return</span> {<br data-v-a758e826><span style="margin-left:90px;color:red;" data-v-a758e826> userPoints</span><br data-v-a758e826><span style="margin-left:60px;" data-v-a758e826></span> }<br data-v-a758e826><span style="margin-left:50px;" data-v-a758e826></span> } </div><br data-v-a758e826>',15),w=Object(n["l"])(" Obviously the variables need to correspond to the same event (ex: Australia 2022...). Points are accumulated event by event until the end of the "),S=r((function(){return Object(n["i"])("u",null,"season",-1)})),F=Object(n["l"])("."),k=r((function(){return Object(n["i"])("br",null,null,-1)})),C=Object(n["l"])(" Poletime Competiton is a individual competition. The "),E=Object(n["l"])("table of results Example"),Q=Object(n["l"])(" show all users together, without "),A=r((function(){return Object(n["i"])("u",null,"groups division",-1)})),_=r((function(){return Object(n["i"])("br",null,null,-1)})),I=r((function(){return Object(n["i"])("br",null,null,-1)})),M=Object(n["k"])('<h4 data-v-a758e826>Form 2: F1Master</h4><br data-v-a758e826><br data-v-a758e826><p data-v-a758e826> Competition about prediction for TOP10 finish race results.<br data-v-a758e826> Users sent they prediction to 1 to 10 finish race results. For each correct prediciton, users make points accordling with the position<br data-v-a758e826><br data-v-a758e826><span style="color:green;" data-v-a758e826>/*basic function logic. Probably this is a stupid Method*/</span><br data-v-a758e826></p><div style="background:rgba(0, 0, 0, 0.9);padding:20px;" data-v-a758e826><span style="color:blue;" data-v-a758e826>function</span> f1masterRaceCalculatePoints (<span style="color:red;" data-v-a758e826>top10RaceResult</span>,<span style="color:red;" data-v-a758e826>userTop10Prediction</span> ){<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> positionOne = if(top10RaceResult[0] === userTop10Prediction[0] ? 25 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> positionTwo = if(top10RaceResult[1] === userTop10Prediction[1] ? 18 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> positionTree = if(top10RaceResult[2] === userTop10Prediction[2] ? 15 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> positionFour = if(top10RaceResult[3] === userTop10Prediction[3] ? 12 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> positionFive = if(top10RaceResult[4] === userTop10Prediction[4] ? 10 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> positionSix = if(top10RaceResult[5] === userTop10Prediction[5] ? 8 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> positionSeven = if(top10RaceResult[6] === userTop10Prediction[6] ? 6 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> positionEigth = if(top10RaceResult[7] === userTop10Prediction[7] ? 4 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> positionNine = if(top10RaceResult[8] === userTop10Prediction[8] ? 2 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> positionTen = if(top10RaceResult[9] === userTop10Prediction[9] ? 1 : 0 );<br data-v-a758e826><br data-v-a758e826><span style="color:blue;margin-left:80px;" data-v-a758e826>const</span> userPoints = positionOne +;<br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ positionTwo;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ positionTree ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ positionFour ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ positionFive;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ positionSix ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ positionSeven ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ positionEigth ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ positionNine ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ positionTen;</span><br data-v-a758e826><br data-v-a758e826><span style="margin-left:80px;color:blue;" data-v-a758e826> return</span> {<br data-v-a758e826><span style="margin-left:90px;color:red;" data-v-a758e826> userRacePoints</span><br data-v-a758e826><span style="margin-left:60px;" data-v-a758e826></span> }<br data-v-a758e826><span style="margin-left:50px;" data-v-a758e826></span> } </div><br data-v-a758e826><p data-v-a758e826> Tiebraker: <br data-v-a758e826> The same formula (&quot;f1masterRaceCalculatePoints()&quot;) is used to calculate the tiebraker. Tiebraker is the user predictions compare with top10 start racing.<br data-v-a758e826></p><div style="background:rgba(0, 0, 0, 0.9);padding:20px;" data-v-a758e826><span style="color:blue;" data-v-a758e826>function</span> f1masterQualifyingCalculatePoints (<span style="color:red;" data-v-a758e826>top10StartRace</span>,<span style="color:red;" data-v-a758e826>userTop10Prediction</span> ){<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> startingPositionOne = if(top10StartRace[0] === userTop10Prediction[0] ? 25 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> startingPositionTwo = if(top10StartRace[1] === userTop10Prediction[1] ? 18 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> startingPositionTree = if(top10StartRace[2] === userTop10Prediction[2] ? 15 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> startingPositionFour = if(top10StartRace[3] === userTop10Prediction[3] ? 12 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> startingPositionFive = if(top10StartRace[4] === userTop10Prediction[4] ? 10 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> startingPositionSix = if(top10StartRace[5] === userTop10Prediction[5] ? 8 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> startingPositionSeven = if(top10StartRace[6] === userTop10Prediction[6] ? 6 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> startingPositionEigth = if(top10StartRace[7] === userTop10Prediction[7] ? 4 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> startingPositionNine = if(top10StartRace[8] === userTop10Prediction[8] ? 2 : 0 );<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> startingPositionTen = if(top10StartRace[9] === userTop10Prediction[9] ? 1 : 0 );<br data-v-a758e826><br data-v-a758e826><span style="color:blue;margin-left:80px;" data-v-a758e826>const</span> userQualifyingPoints = startingPositionOne +;<br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ startingPositionTwo;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ startingPositionTree ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ startingPositionFour ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ startingPositionFive;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ startingPositionSix ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ startingPositionSeven ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ startingPositionEigth ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ startingPositionNine ;</span><br data-v-a758e826><span style="margin-left:100px;" data-v-a758e826>+ startingPositionTen;</span><br data-v-a758e826><br data-v-a758e826><span style="margin-left:80px;color:blue;" data-v-a758e826> return</span> {<br data-v-a758e826><span style="margin-left:90px;color:red;" data-v-a758e826> userQualifyingPoints</span><br data-v-a758e826><span style="margin-left:60px;" data-v-a758e826></span> }<br data-v-a758e826><span style="margin-left:50px;" data-v-a758e826></span> } </div><br data-v-a758e826><p data-v-a758e826>...and finally, users&#39; points are assigned<br data-v-a758e826></p><div style="background:rgba(0, 0, 0, 0.9);padding:20px;" data-v-a758e826><span style="color:blue;" data-v-a758e826>function</span> f1masterFinalPoints (<span style="color:red;" data-v-a758e826>userQualifyingPoints</span>,<span style="color:red;" data-v-a758e826>userRacePoints</span> ){<br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>const</span> f1masterUserPoints = userRacePoints + userQualifyingPoints / 10000;<br data-v-a758e826><br data-v-a758e826><span style="color:blue;margin-left:60px;" data-v-a758e826>return</span>{<br data-v-a758e826><span style="margin-left:100px;color:red;" data-v-a758e826>f1masterUserPoints</span><br data-v-a758e826><span style="margin-left:60px;" data-v-a758e826></span>}<br data-v-a758e826><span style="margin-left:30px;" data-v-a758e826></span> } </div><br data-v-a758e826><p data-v-a758e826> All users registration in F1Master have a Group and a Team and its defined using the follow function<br data-v-a758e826></p><div style="background:rgba(0, 0, 0, 0.9);padding:20px;" data-v-a758e826></div>',14);function N(a,t,e,s,r,N){var q=Object(n["Q"])("router-link");return Object(n["H"])(),Object(n["h"])("div",o,[Object(n["i"])("div",i,[l,p,d,c,u,b,v,f,Object(n["i"])("p",null,[g,Object(n["m"])(q,{to:"/playtoearn"},{default:Object(n["hb"])((function(){return[m]})),_:1}),y,x,P,Object(n["m"])(q,{to:"/start"},{default:Object(n["hb"])((function(){return[h]})),_:1}),O,Object(n["m"])(q,{to:"/race"},{default:Object(n["hb"])((function(){return[j]})),_:1}),R]),T,Object(n["i"])("p",null,[w,S,F,k,C,Object(n["m"])(q,{to:"tablePoletimeExample"},{default:Object(n["hb"])((function(){return[E]})),_:1}),Q,A,_,I]),M])])}var q={},U=(e("db35"),e("6b0d")),D=e.n(U);const H=D()(q,[["render",N],["__scopeId","data-v-a758e826"]]);var G=H,J={components:{Doc:G},setup:function(){return{}}};const K=D()(J,[["render",s]]);t["default"]=K},db35:function(a,t,e){"use strict";e("2211")}}]);
//# sourceMappingURL=about.ff0161d3.js.map